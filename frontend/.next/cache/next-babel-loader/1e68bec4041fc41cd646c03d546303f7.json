{"ast":null,"code":"var _jsxFileName = \"D:\\\\HUFLIT\\\\Nam 3\\\\HK2\\\\CNPMNC\\\\foodie-blog\\\\frontend\\\\components\\\\form\\\\ContactForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { emailContactForm } from '../../actions/form';\n\nconst ContactForm = ({\n  authorEmail\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    message: '',\n    name: '',\n    email: '',\n    sent: false,\n    buttonText: 'Send Message',\n    success: false,\n    error: false\n  });\n  const {\n    message,\n    name,\n    email,\n    sent,\n    buttonText,\n    success,\n    error\n  } = values;\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      buttonText: 'Sending...'\n    }));\n    emailContactForm({\n      authorEmail,\n      name,\n      email,\n      message\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          sent: true,\n          name: '',\n          email: '',\n          message: '',\n          buttonText: 'Sent',\n          success: data.success\n        }));\n      }\n    });\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value,\n      error: false,\n      success: false,\n      buttonText: 'Send Message'\n    }));\n  };\n\n  const showSuccessMessage = () => success && __jsx(\"div\", {\n    className: \"alert alert-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Thank you for contacting us.\");\n\n  const showErrorMessage = () => __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, error);\n\n  const contactForm = () => {\n    return __jsx(\"form\", {\n      onSubmit: clickSubmit,\n      className: \"pb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Message\"), __jsx(\"textarea\", {\n      onChange: handleChange('message'),\n      type: \"text\",\n      className: \"form-control\",\n      value: message,\n      required: true,\n      rows: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      onChange: handleChange('name'),\n      className: \"form-control\",\n      value: name,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"email\",\n      onChange: handleChange('email'),\n      className: \"form-control\",\n      value: email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, buttonText)));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, showSuccessMessage(), showErrorMessage(), contactForm());\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["D:/HUFLIT/Nam 3/HK2/CNPMNC/foodie-blog/frontend/components/form/ContactForm.js"],"names":["useState","Link","emailContactForm","ContactForm","authorEmail","values","setValues","message","name","email","sent","buttonText","success","error","clickSubmit","e","preventDefault","then","data","handleChange","target","value","showSuccessMessage","showErrorMessage","display","contactForm"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { emailContactForm } from '../../actions/form';\r\n\r\nconst ContactForm = ({ authorEmail }) => {\r\n  const [values, setValues] = useState({\r\n    message: '',\r\n    name: '',\r\n    email: '',\r\n    sent: false,\r\n    buttonText: 'Send Message',\r\n    success: false,\r\n    error: false,\r\n  });\r\n\r\n  const { message, name, email, sent, buttonText, success, error } = values;\r\n\r\n  const clickSubmit = (e) => {\r\n    e.preventDefault();\r\n    setValues({ ...values, buttonText: 'Sending...' });\r\n    emailContactForm({ authorEmail, name, email, message }).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          sent: true,\r\n          name: '',\r\n          email: '',\r\n          message: '',\r\n          buttonText: 'Sent',\r\n          success: data.success,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setValues({\r\n      ...values,\r\n      [name]: e.target.value,\r\n      error: false,\r\n      success: false,\r\n      buttonText: 'Send Message',\r\n    });\r\n  };\r\n\r\n  const showSuccessMessage = () =>\r\n    success && (\r\n      <div className='alert alert-info'>Thank you for contacting us.</div>\r\n    );\r\n\r\n  const showErrorMessage = () => (\r\n    <div\r\n      className='alert alert-danger'\r\n      style={{ display: error ? '' : 'none' }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const contactForm = () => {\r\n    return (\r\n      <form onSubmit={clickSubmit} className='pb-5'>\r\n        <div className='form-group'>\r\n          <label className='lead'>Message</label>\r\n          <textarea\r\n            onChange={handleChange('message')}\r\n            type='text'\r\n            className='form-control'\r\n            value={message}\r\n            required\r\n            rows='10'\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label className='lead'>Name</label>\r\n          <input\r\n            type='text'\r\n            onChange={handleChange('name')}\r\n            className='form-control'\r\n            value={name}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label className='lead'>Email</label>\r\n          <input\r\n            type='email'\r\n            onChange={handleChange('email')}\r\n            className='form-control'\r\n            value={email}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <button className='btn btn-primary'>{buttonText}</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showSuccessMessage()}\r\n      {showErrorMessage()}\r\n      {contactForm()}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}