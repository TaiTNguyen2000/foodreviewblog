{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\HUFLIT\\\\Nam 3\\\\HK2\\\\CNPMNC\\\\foodie-blog\\\\frontend\\\\components\\\\auth\\\\ProfileUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth, updateUser } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\nimport { API } from '../../config';\n\nvar ProfileUpdate = function ProfileUpdate() {\n  _s();\n\n  var _useState = useState({\n    username: '',\n    username_for_photo: '',\n    name: '',\n    email: '',\n    about: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    userData: true && new FormData()\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var token = getCookie('token');\n  var username = values.username,\n      username_for_photo = values.username_for_photo,\n      name = values.name,\n      email = values.email,\n      about = values.about,\n      password = values.password,\n      error = values.error,\n      success = values.success,\n      loading = values.loading,\n      photo = values.photo,\n      userData = values.userData;\n\n  var init = function init() {\n    getProfile(token).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          username: data.username,\n          username_for_photo: data.username,\n          name: data.name,\n          email: data.email,\n          about: data.about\n        }));\n      }\n    });\n  };\n\n  useEffect(function () {\n    init();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      userData: new FormData()\n    }));\n  }, []);\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _console, _objectSpread2;\n\n      // console.log(e.target.value);\n      var value = name === 'photo' ? e.target.files[0] : e.target.value; // let userData = new FormData();\n\n      userData.set(name, value);\n\n      (_console = console).log.apply(_console, _toConsumableArray(userData)); // SEE THE FORMDATA IN CONSOLE\n\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, value), _defineProperty(_objectSpread2, \"userData\", userData), _defineProperty(_objectSpread2, \"error\", false), _defineProperty(_objectSpread2, \"success\", false), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    update(token, userData).then(function (data) {\n      if (data.error) {\n        console.log('data.error', data.error);\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error,\n          loading: false\n        }));\n      } else {\n        updateUser(data, function () {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            username: data.username,\n            name: data.name,\n            email: data.email,\n            about: data.about,\n            password: '',\n            success: true,\n            loading: false\n          }));\n        });\n      }\n    });\n  };\n\n  var profileUpdateForm = function profileUpdateForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      className: \"btn btn-outline-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Profile photo\", __jsx(\"input\", {\n      onChange: handleChange('photo'),\n      type: \"file\",\n      accept: \"image/*\",\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }))), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"Username\"), __jsx(\"input\", {\n      onChange: handleChange('username'),\n      type: \"text\",\n      value: username,\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Name\"), __jsx(\"input\", {\n      onChange: handleChange('name'),\n      type: \"text\",\n      value: name,\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, \"About\"), __jsx(\"textarea\", {\n      onChange: handleChange('about'),\n      type: \"text\",\n      value: about,\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, \"Password\"), __jsx(\"input\", {\n      onChange: handleChange('password'),\n      type: \"password\",\n      value: password,\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, showSuccess(), showError(), showLoading()), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: !username || !name || !email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, \"Update\")));\n  };\n\n  var showError = function showError() {\n    return __jsx(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? '' : 'none'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }\n    }, error);\n  };\n\n  var showSuccess = function showSuccess() {\n    return __jsx(\"div\", {\n      className: \"alert alert-success\",\n      style: {\n        display: success ? '' : 'none'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }\n    }, \"Profile updated\");\n  };\n\n  var showLoading = function showLoading() {\n    return __jsx(\"div\", {\n      className: \"alert alert-info\",\n      style: {\n        display: loading ? '' : 'none'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }\n    }, \"Loading...\");\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(API, \"/user/photo/\").concat(username_for_photo),\n    className: \"img img-fluid img-thumbnail mb-3\",\n    style: {\n      maxHeight: 'auto',\n      maxWidth: '100%'\n    },\n    alt: \"user profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"col-md-8 mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, profileUpdateForm()))));\n};\n\n_s(ProfileUpdate, \"mhvgUSTo2VSJMFZjU/NcwpjvtSM=\");\n\n_c = ProfileUpdate;\nexport default ProfileUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileUpdate\");","map":{"version":3,"sources":["D:/HUFLIT/Nam 3/HK2/CNPMNC/foodie-blog/frontend/components/auth/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","updateUser","getProfile","update","API","ProfileUpdate","username","username_for_photo","name","email","about","password","error","success","loading","photo","userData","FormData","values","setValues","token","init","then","data","handleChange","e","value","target","files","set","console","log","handleSubmit","preventDefault","profileUpdateForm","showSuccess","showError","showLoading","display","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport { getCookie, isAuth, updateUser } from '../../actions/auth';\r\nimport { getProfile, update } from '../../actions/user';\r\nimport { API } from '../../config';\r\n\r\nconst ProfileUpdate = () => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    username_for_photo: '',\r\n    name: '',\r\n    email: '',\r\n    about: '',\r\n    password: '',\r\n    error: false,\r\n    success: false,\r\n    loading: false,\r\n    photo: '',\r\n    userData: process.browser && new FormData(),\r\n  });\r\n\r\n  const token = getCookie('token');\r\n  const {\r\n    username,\r\n    username_for_photo,\r\n    name,\r\n    email,\r\n    about,\r\n    password,\r\n    error,\r\n    success,\r\n    loading,\r\n    photo,\r\n    userData,\r\n  } = values;\r\n\r\n  const init = () => {\r\n    getProfile(token).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          username: data.username,\r\n          username_for_photo: data.username,\r\n          name: data.name,\r\n          email: data.email,\r\n          about: data.about,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    setValues({ ...values, userData: new FormData() });\r\n  }, []);\r\n\r\n  const handleChange = (name) => (e) => {\r\n    // console.log(e.target.value);\r\n    const value = name === 'photo' ? e.target.files[0] : e.target.value;\r\n    // let userData = new FormData();\r\n    userData.set(name, value);\r\n    console.log(...userData); // SEE THE FORMDATA IN CONSOLE\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n      userData,\r\n      error: false,\r\n      success: false,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setValues({ ...values, loading: true });\r\n    update(token, userData).then((data) => {\r\n      if (data.error) {\r\n        console.log('data.error', data.error);\r\n        setValues({ ...values, error: data.error, loading: false });\r\n      } else {\r\n        updateUser(data, () => {\r\n          setValues({\r\n            ...values,\r\n            username: data.username,\r\n            name: data.name,\r\n            email: data.email,\r\n            about: data.about,\r\n            password: '',\r\n            success: true,\r\n            loading: false,\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const profileUpdateForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label className='btn btn-outline-info'>\r\n          Profile photo\r\n          <input\r\n            onChange={handleChange('photo')}\r\n            type='file'\r\n            accept='image/*'\r\n            hidden\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Username</label>\r\n        <input\r\n          onChange={handleChange('username')}\r\n          type='text'\r\n          value={username}\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Name</label>\r\n        <input\r\n          onChange={handleChange('name')}\r\n          type='text'\r\n          value={name}\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      {/*<div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\r\n            </div>*/}\r\n      <div className='form-group'>\r\n        <label className='text-muted'>About</label>\r\n        <textarea\r\n          onChange={handleChange('about')}\r\n          type='text'\r\n          value={about}\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Password</label>\r\n        <input\r\n          onChange={handleChange('password')}\r\n          type='password'\r\n          value={password}\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      <div>\r\n        {showSuccess()}\r\n        {showError()}\r\n        {showLoading()}\r\n      </div>\r\n      <div>\r\n        <button\r\n          type='submit'\r\n          className='btn btn-primary'\r\n          disabled={!username || !name || !email}\r\n        >\r\n          Update\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const showError = () => (\r\n    <div\r\n      className='alert alert-danger'\r\n      style={{ display: error ? '' : 'none' }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const showSuccess = () => (\r\n    <div\r\n      className='alert alert-success'\r\n      style={{ display: success ? '' : 'none' }}\r\n    >\r\n      Profile updated\r\n    </div>\r\n  );\r\n\r\n  const showLoading = () => (\r\n    <div\r\n      className='alert alert-info'\r\n      style={{ display: loading ? '' : 'none' }}\r\n    >\r\n      Loading...\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-4'>\r\n            <img\r\n              src={`${API}/user/photo/${username_for_photo}`}\r\n              className='img img-fluid img-thumbnail mb-3'\r\n              style={{ maxHeight: 'auto', maxWidth: '100%' }}\r\n              alt='user profile'\r\n            />\r\n          </div>\r\n          <div className='col-md-8 mb-5'>{profileUpdateForm()}</div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileUpdate;\r\n"]},"metadata":{},"sourceType":"module"}