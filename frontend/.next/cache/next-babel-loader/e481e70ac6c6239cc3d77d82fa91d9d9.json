{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport queryString from 'query-string';\nimport { isAuth, handleResponse } from './auth';\nexport var createBlog = function createBlog(blog, token) {\n  var createBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    createBlogEndpoint = \"\".concat(API, \"/blog\");\n  } else if (isAuth() && isAuth().role === 0) {\n    createBlogEndpoint = \"\".concat(API, \"/user/blog\");\n  }\n\n  return fetch(\"\".concat(createBlogEndpoint), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listBlogsWithCategoriesAndTags = function listBlogsWithCategoriesAndTags(skip, limit) {\n  var data = {\n    limit: limit,\n    skip: skip\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var singleBlog = function singleBlog() {\n  var slug = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listRelated = function listRelated(blog) {\n  return fetch(\"\".concat(API, \"/blogs/related\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(blog)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var list = function list(username) {\n  var listBlogsEndpoint;\n\n  if (username) {\n    listBlogsEndpoint = \"\".concat(API, \"/\").concat(username, \"/blogs\");\n  } else {\n    listBlogsEndpoint = \"\".concat(API, \"/blogs\");\n  }\n\n  return fetch(\"\".concat(listBlogsEndpoint), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeBlog = function removeBlog(slug, token) {\n  var deleteBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    deleteBlogEndpoint = \"\".concat(API, \"/blog/\").concat(slug);\n  } else if (isAuth() && isAuth().role === 0) {\n    deleteBlogEndpoint = \"\".concat(API, \"/user/blog/\").concat(slug);\n  }\n\n  return fetch(\"\".concat(deleteBlogEndpoint), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var updateBlog = function updateBlog(blog, token, slug) {\n  var updateBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    updateBlogEndpoint = \"\".concat(API, \"/blog/\").concat(slug);\n  } else if (isAuth() && isAuth().role === 0) {\n    updateBlogEndpoint = \"\".concat(API, \"/user/blog/\").concat(slug);\n  }\n\n  return fetch(\"\".concat(updateBlogEndpoint), {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listSearch = function listSearch(params) {\n  console.log('search params', params);\n  var query = queryString.stringify(params);\n  console.log('query params', query);\n  return fetch(\"\".concat(API, \"/blogs/search?\").concat(query), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["D:/HUFLIT/Nam 3/HK2/CNPMNC/foodie-blog/frontend/actions/blog.js"],"names":["fetch","API","queryString","isAuth","handleResponse","createBlog","blog","token","createBlogEndpoint","role","method","headers","Accept","Authorization","body","then","response","json","err","console","log","listBlogsWithCategoriesAndTags","skip","limit","data","JSON","stringify","singleBlog","slug","undefined","listRelated","list","username","listBlogsEndpoint","removeBlog","deleteBlogEndpoint","updateBlog","updateBlogEndpoint","listSearch","params","query"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport queryString from 'query-string';\r\nimport { isAuth, handleResponse } from './auth';\r\n\r\nexport const createBlog = (blog, token) => {\r\n  let createBlogEndpoint;\r\n\r\n  if (isAuth() && isAuth().role === 1) {\r\n    createBlogEndpoint = `${API}/blog`;\r\n  } else if (isAuth() && isAuth().role === 0) {\r\n    createBlogEndpoint = `${API}/user/blog`;\r\n  }\r\n\r\n  return fetch(`${createBlogEndpoint}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: blog,\r\n  })\r\n    .then((response) => {\r\n      handleResponse(response);\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const listBlogsWithCategoriesAndTags = (skip, limit) => {\r\n  const data = {\r\n    limit,\r\n    skip,\r\n  };\r\n  return fetch(`${API}/blogs-categories-tags`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const singleBlog = (slug = undefined) => {\r\n  return fetch(`${API}/blog/${slug}`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const listRelated = (blog) => {\r\n  return fetch(`${API}/blogs/related`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(blog),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const list = (username) => {\r\n  let listBlogsEndpoint;\r\n\r\n  if (username) {\r\n    listBlogsEndpoint = `${API}/${username}/blogs`;\r\n  } else {\r\n    listBlogsEndpoint = `${API}/blogs`;\r\n  }\r\n\r\n  return fetch(`${listBlogsEndpoint}`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeBlog = (slug, token) => {\r\n  let deleteBlogEndpoint;\r\n\r\n  if (isAuth() && isAuth().role === 1) {\r\n    deleteBlogEndpoint = `${API}/blog/${slug}`;\r\n  } else if (isAuth() && isAuth().role === 0) {\r\n    deleteBlogEndpoint = `${API}/user/blog/${slug}`;\r\n  }\r\n\r\n  return fetch(`${deleteBlogEndpoint}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      handleResponse(response);\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateBlog = (blog, token, slug) => {\r\n  let updateBlogEndpoint;\r\n\r\n  if (isAuth() && isAuth().role === 1) {\r\n    updateBlogEndpoint = `${API}/blog/${slug}`;\r\n  } else if (isAuth() && isAuth().role === 0) {\r\n    updateBlogEndpoint = `${API}/user/blog/${slug}`;\r\n  }\r\n\r\n  return fetch(`${updateBlogEndpoint}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: blog,\r\n  })\r\n    .then((response) => {\r\n      handleResponse(response);\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const listSearch = (params) => {\r\n  console.log('search params', params);\r\n  let query = queryString.stringify(params);\r\n  console.log('query params', query);\r\n  return fetch(`${API}/blogs/search?${query}`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}